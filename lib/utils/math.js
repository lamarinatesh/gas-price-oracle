"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toWei = exports.roundGwei = exports.round = exports.getMedian = exports.findMax = exports.bumpOnPercent = void 0;

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _constants = require("../constants");

var _crypto = require("./crypto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var findMax = function findMax(values) {
  return values.reduce(function (acc, curr, index) {
    var isGreaterThanAcc = curr.isGreaterThan(acc.highest);

    if (isGreaterThanAcc) {
      acc.highest = curr;
      acc.index = index;
    }

    return acc;
  }, {
    highest: _constants.BG_ZERO,
    index: 0
  });
};

exports.findMax = findMax;

var getMedian = function getMedian(arr) {
  return Math.floor(arr.length / 2);
};

exports.getMedian = getMedian;

var round = function round(value) {
  return new _bignumber["default"](value).decimalPlaces(0, 2);
};

exports.round = round;

var roundGwei = function roundGwei(value) {
  return (0, _crypto.toGwei)(value).decimalPlaces(0, 2);
};

exports.roundGwei = roundGwei;

var bumpOnPercent = function bumpOnPercent(value, bumpPercent) {
  return value + value * bumpPercent / _constants.PERCENT_MULTIPLIER;
};

exports.bumpOnPercent = bumpOnPercent;

var toWei = function toWei(value) {
  return new _bignumber["default"](value).multipliedBy(_constants.GWEI).decimalPlaces(0).toNumber();
};

exports.toWei = toWei;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmaW5kTWF4IiwidmFsdWVzIiwicmVkdWNlIiwiYWNjIiwiY3VyciIsImluZGV4IiwiaXNHcmVhdGVyVGhhbkFjYyIsImlzR3JlYXRlclRoYW4iLCJoaWdoZXN0IiwiQkdfWkVSTyIsImdldE1lZGlhbiIsImFyciIsIk1hdGgiLCJmbG9vciIsImxlbmd0aCIsInJvdW5kIiwidmFsdWUiLCJCaWdOdW1iZXIiLCJkZWNpbWFsUGxhY2VzIiwicm91bmRHd2VpIiwidG9Hd2VpIiwiYnVtcE9uUGVyY2VudCIsImJ1bXBQZXJjZW50IiwiUEVSQ0VOVF9NVUxUSVBMSUVSIiwidG9XZWkiLCJtdWx0aXBsaWVkQnkiLCJHV0VJIiwidG9OdW1iZXIiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvbWF0aC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmlnTnVtYmVyIGZyb20gJ2JpZ251bWJlci5qcydcblxuaW1wb3J0IHsgQkdfWkVSTywgR1dFSSwgUEVSQ0VOVF9NVUxUSVBMSUVSIH0gZnJvbSAnQC9jb25zdGFudHMnXG5cbmltcG9ydCB7IHRvR3dlaSB9IGZyb20gJy4vY3J5cHRvJ1xuXG50eXBlIEZpbmRNYXhSZXMgPSB7XG4gIGhpZ2hlc3Q6IEJpZ051bWJlclxuICBpbmRleDogbnVtYmVyXG59XG5cbmNvbnN0IGZpbmRNYXggPSAodmFsdWVzOiBCaWdOdW1iZXJbXSk6IEZpbmRNYXhSZXMgPT4ge1xuICByZXR1cm4gdmFsdWVzLnJlZHVjZShcbiAgICAoYWNjLCBjdXJyLCBpbmRleCkgPT4ge1xuICAgICAgY29uc3QgaXNHcmVhdGVyVGhhbkFjYyA9IGN1cnIuaXNHcmVhdGVyVGhhbihhY2MuaGlnaGVzdClcbiAgICAgIGlmIChpc0dyZWF0ZXJUaGFuQWNjKSB7XG4gICAgICAgIGFjYy5oaWdoZXN0ID0gY3VyclxuICAgICAgICBhY2MuaW5kZXggPSBpbmRleFxuICAgICAgfVxuICAgICAgcmV0dXJuIGFjY1xuICAgIH0sXG4gICAge1xuICAgICAgaGlnaGVzdDogQkdfWkVSTyxcbiAgICAgIGluZGV4OiAwLFxuICAgIH0sXG4gIClcbn1cblxuY29uc3QgZ2V0TWVkaWFuID0gPFQ+KGFycjogVFtdKSA9PiB7XG4gIHJldHVybiBNYXRoLmZsb29yKGFyci5sZW5ndGggLyAyKVxufVxuXG5jb25zdCByb3VuZCA9ICh2YWx1ZTogbnVtYmVyIHwgc3RyaW5nIHwgQmlnTnVtYmVyKTogQmlnTnVtYmVyID0+IHtcbiAgcmV0dXJuIG5ldyBCaWdOdW1iZXIodmFsdWUpLmRlY2ltYWxQbGFjZXMoMCwgMilcbn1cblxuY29uc3Qgcm91bmRHd2VpID0gKHZhbHVlOiBudW1iZXIgfCBzdHJpbmcgfCBCaWdOdW1iZXIpOiBCaWdOdW1iZXIgPT4ge1xuICByZXR1cm4gdG9Hd2VpKHZhbHVlKS5kZWNpbWFsUGxhY2VzKDAsIDIpXG59XG5cbmNvbnN0IGJ1bXBPblBlcmNlbnQgPSAodmFsdWU6IG51bWJlciwgYnVtcFBlcmNlbnQ6IG51bWJlcik6IG51bWJlciA9PiB7XG4gIHJldHVybiB2YWx1ZSArICh2YWx1ZSAqIGJ1bXBQZXJjZW50KSAvIFBFUkNFTlRfTVVMVElQTElFUlxufVxuXG5jb25zdCB0b1dlaSA9ICh2YWx1ZTogbnVtYmVyKTogbnVtYmVyID0+IHtcbiAgcmV0dXJuIG5ldyBCaWdOdW1iZXIodmFsdWUpLm11bHRpcGxpZWRCeShHV0VJKS5kZWNpbWFsUGxhY2VzKDApLnRvTnVtYmVyKClcbn1cblxuZXhwb3J0IHsgdG9XZWksIGZpbmRNYXgsIGdldE1lZGlhbiwgcm91bmQsIHJvdW5kR3dlaSwgYnVtcE9uUGVyY2VudCB9XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFFQTs7OztBQU9BLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNDLE1BQUQsRUFBcUM7RUFDbkQsT0FBT0EsTUFBTSxDQUFDQyxNQUFQLENBQ0wsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLEtBQVosRUFBc0I7SUFDcEIsSUFBTUMsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ0csYUFBTCxDQUFtQkosR0FBRyxDQUFDSyxPQUF2QixDQUF6Qjs7SUFDQSxJQUFJRixnQkFBSixFQUFzQjtNQUNwQkgsR0FBRyxDQUFDSyxPQUFKLEdBQWNKLElBQWQ7TUFDQUQsR0FBRyxDQUFDRSxLQUFKLEdBQVlBLEtBQVo7SUFDRDs7SUFDRCxPQUFPRixHQUFQO0VBQ0QsQ0FSSSxFQVNMO0lBQ0VLLE9BQU8sRUFBRUMsa0JBRFg7SUFFRUosS0FBSyxFQUFFO0VBRlQsQ0FUSyxDQUFQO0FBY0QsQ0FmRDs7OztBQWlCQSxJQUFNSyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFJQyxHQUFKLEVBQWlCO0VBQ2pDLE9BQU9DLElBQUksQ0FBQ0MsS0FBTCxDQUFXRixHQUFHLENBQUNHLE1BQUosR0FBYSxDQUF4QixDQUFQO0FBQ0QsQ0FGRDs7OztBQUlBLElBQU1DLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUNDLEtBQUQsRUFBbUQ7RUFDL0QsT0FBTyxJQUFJQyxxQkFBSixDQUFjRCxLQUFkLEVBQXFCRSxhQUFyQixDQUFtQyxDQUFuQyxFQUFzQyxDQUF0QyxDQUFQO0FBQ0QsQ0FGRDs7OztBQUlBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNILEtBQUQsRUFBbUQ7RUFDbkUsT0FBTyxJQUFBSSxjQUFBLEVBQU9KLEtBQVAsRUFBY0UsYUFBZCxDQUE0QixDQUE1QixFQUErQixDQUEvQixDQUFQO0FBQ0QsQ0FGRDs7OztBQUlBLElBQU1HLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0wsS0FBRCxFQUFnQk0sV0FBaEIsRUFBZ0Q7RUFDcEUsT0FBT04sS0FBSyxHQUFJQSxLQUFLLEdBQUdNLFdBQVQsR0FBd0JDLDZCQUF2QztBQUNELENBRkQ7Ozs7QUFJQSxJQUFNQyxLQUFLLEdBQUcsU0FBUkEsS0FBUSxDQUFDUixLQUFELEVBQTJCO0VBQ3ZDLE9BQU8sSUFBSUMscUJBQUosQ0FBY0QsS0FBZCxFQUFxQlMsWUFBckIsQ0FBa0NDLGVBQWxDLEVBQXdDUixhQUF4QyxDQUFzRCxDQUF0RCxFQUF5RFMsUUFBekQsRUFBUDtBQUNELENBRkQifQ==